#The head capsule = 1,
#The mandibles = 2,
#The sensory structures = 4
head_mand_asym <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
2, 2, 2, 3, 3, 3, 2, 3, 2, 2,
2, 2, 3, 3, 3, 3, 1, 1)
# Three modules:
# The head capsule = 1
# The right mandible = 2
# The left madible = 3
head_mand_asym_sens <- c(1, 1, 1, 1, 4, 4, 4, 1, 1, 1,
4, 4, 4, 1, 1, 4, 1, 1, 2, 3,
2, 2, 2, 3, 3, 3, 2, 3, 2, 2,
2, 2, 3, 3, 3, 3, 4, 4)
# Four modules:
# The head capsule = 1
# The right mandible = 2
# The left mandible = 3
# Sensory structures = 4
ventral_dorsal <- c(1, 1, 1, 1, 4, 4, 4, 1, 1, 1,
4, 4, 4, 1, 1, 4, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 4, 4)
# Two modules:
# The dorsal part of the head (eyes, ocelli, antennae...)
# The mandibles, associated with ventral part of the head (tentorium...)
half_half <- c(NA, NA, 1, 1, 1, 1, 1, 1, NA, 2,
2, 2, 2, 2, 2, NA, 1, 2, 1, 2,
1, 1, 1, 2, 2, 2, 1, 2, 1, 1,
1, 1, 2, 2, 2, 2, 1, 2)
# Two modules:
# Left side of head and mandibles
# Right side
# Midline landmarks excludede
mandi_only <- c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, 2, 3,
2, 2, 2, 3, 3, 3, 2, 3, 2, 2,
2, 2, 3, 3, 3, 3, NA, NA)
# Two modules:
# Left mandible
# Right mandible
df_modul_models <- data.frame(name = names_LM,
no_modul = no_modularity,
head_mand = head_mand,
head_mand_sens = head_mand_sens,
head_mand_asym = head_mand_asym,
head_mand_asym_sens = head_mand_asym_sens,
ventral_dorsal = ventral_dorsal,
half_half = half_half,
mandi_only = mandi_only)
df_modul_models <- df_modul_models[-c(8:10),]
DF <- df_modul_models
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# Make lollipop plot for FA and DA components
palette(c("bisque", "firebrick", "navyblue", "forestgreen"))
cols <- head_mand[-c(8:10)]
par(mar = c(1, 1, 4, 1))
layout(matrix(1:2, ncol = 2))
plot(bilat_sym$DA.component[,2,2],
bilat_sym$DA.component[,1,2],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$DA.component[i, 2, 1], bilat_sym$DA.component[i, 2, 2]),
y = c(bilat_sym$DA.component[i, 1, 1], bilat_sym$DA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$DA.component[,2,2],
bilat_sym$DA.component[,1,2],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$DA.component[,3,1],
y = bilat_sym$DA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$DA.component[i, 3, 1], bilat_sym$DA.component[i, 3, 2]),
y = c(bilat_sym$DA.component[i, 2, 1], bilat_sym$DA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
lm(BF ~ csiz)
lm(bf ~ csiz)
lm(bfé ~ csiz)
lm(bf2 ~ csiz)
lm(bf2 ~ c.siz)
lm(bf2 ~ csize)
csize
HL
TL
dat <- read.csv(file = "data/data_subset.csv",
header = T,
sep = ",",
dec = ".")
pA
csiz
csiz.av
lm(bf2 ~ csiz.av)
summary(lm(bf2 ~ csiz.av))
confint(summary(lm(bf2 ~ csiz.av)))
confint(lm(bf2 ~ csiz.av))
dat
dat[,5:9]
lm(dat[,5:9]~csiz.qv
lm(dat[,5:9]~csiz.av)
mlm(dat[,5:9]~csiz.av)
mlm(cbind(dat[,5:9])~csiz.av)
lm(cbind(dat[,5:9])~csiz.av)
cbind(dat[,5:9])
lm(as.matrix(dat[,5:9])~csiz.av)
lm(as.matrix(dat[-26,5:9])~csiz.av)
summary(lm(as.matrix(dat[-26,5:9])~csiz.av))
blob<-lm(as.matrix(dat[-26,5:9])~csiz.av)
library(car)
Anova(blob)
Manova(blob)
bilat_sym
layout(matrix(1:2, ncol = 2))
par(mar = c(1, 1, 4, 1))
plot(bilat_sym$FA.component[,c(2,1),2],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
y = c(bilat_sym$FA.component[i, 1, 1], bilat_sym$FA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$FA.component[,2,2],
bilat_sym$FA.component[,1,2],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$FA.component[,3,1],
y = bilat_sym$FA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$FA.component[i, 3, 1], bilat_sym$FA.component[i, 3, 2]),
y = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$FA.component[,3,1],
bilat_sym$FA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
text(-bilat_sym$FA.component[,3,1],
bilat_sym$FA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
bilat_sym$asymm.shape
bilat_sym$FA.component
bilat_sym$DA.component
bilat_sym$FA.component
plot(bilat_sym)
?plot.bilat.symmetry
plot.bilat.symmetry(bilat_sym)
lbirary(geomorph)
library(geomorph)
plot.bilat.symmetry(bilat_sym)
plot(bilat_sym, col = head_mand)
plot(bilat_sym, warpgrids = T, mesh = T)
plot(bilat_sym, warpgrids = T, mesh = F)
plot(bilat_sym, warpgrids = T)
plot(bilat_sym, warpgrids = F)
plot(bilat_sym)
bilat_sym
plot(c(1,2,3), c(2,3,1))
chull(c(1,2,3), c(2,3,1))
polygon(c(1,2,3), c(2,3,1))
polygon(c(1,2,3), c(2,3,1), col = 2)
polygon(c(1,2,3), c(2,3,1), col = 2, border = NULL)
polygon(c(1,2,3), c(2,3,1), col = 2, border = 3)
lines(c(1,2,3), c(2,3,1), col = 2)
dev.off()
FA
DA
FA2
TA
cor.test(TA, FA)
cor.test(TA, DA)
asym_mandi$PCA.asym
asym_mandi$PCA.asym$sdev
asym_mandi$PCA.asym$sdev^2/sum(asym_mandi$PCA.asym$sdev^2)
100*asym_mandi$PCA.asym$sdev^2/sum(asym_mandi$PCA.asym$sdev^2)
mean(FA)
t.test(FA)
DA_mandi
FA_mandi
t.test(FA_mandi)
t.test(DA_mandi)
plot(DA_mandi, FA_mandi)
cor.test(DA_mandi, FA_mandi)
t.test(FA)
hist(FA)
shapiro.test(FA)
cor.test(DA_mandi, FA_mandi)
cor.test(DA, FA)
cor.test(DA_mandi, FA_head)
cor.test(DA_head, FA_head)
100*asym_mandi$PCA.asym$sdev^2/sum(asym_mandi$PCA.asym$sdev^2)
barplot(100*asym_mandi$PCA.asym$sdev^2/sum(asym_mandi$PCA.asym$sdev^2))
100*decomp_asym$PCA.asym$sdev^2/sum(decomp_asym$PCA.asym$sdev^2)
hist(decomp_asym$PCA.asym$x[,1]
)
hist(decomp_asym$PCA.asym$x[,1])
hist(decomp_asym$PCA.asym$x[,2])
shqpiro.test(decomp_asym$PCA.asym$x[,2])
shapiro.test(decomp_asym$PCA.asym$x[,2])
t.test(decomp_asym$PCA.asym$x[,2])
t.test(FA)
shapiro.test(FA)
cor.test(DA, FA)
dim(shapes)
av_A
M
A <- av_A #No need for replicates
M <- matrix(NA,
nrow = dim(A)[3],
ncol = dim(A)[2] * dim(A)[1])
for (i in 1:dim(A)[3]) {M[i,] <- c(t(A[,,i]))}
DF_3 <- data.frame(apply(X = DF,
MARGIN = 2,
FUN = rep,
each = 3))
DF_3[, 2:6] <- apply(X = DF_3[, 2:6],
MARGIN = 2,
FUN = as.numeric)
cong_M <- dotcorr(A)
cor_M <- cor(M)
?EMMLi
# Required packages:
library(geomorph)
library(EMMLi)
library(abind)
library(scales)
library(paleomorph)
?EMMLi
modul_co
# Required packages:
library(geomorph)
library(EMMLi)
library(abind)
library(scales)
library(paleomorph)
source("../repo/001_functions.R")
source("../asym_simulation/001_functions.R")
source("../asym_simulation/002_asym_components.R")
source("Rfunctions1.txt")
palette(palette.colors(palette = "Okabe-Ito"))
#-------------------------------------------------------------------------------
# Load landöark template
LM_template <- read.csv("data/LM_template.csv")
names_LM <- LM_template[,1]
no_modularity <- rep(1,
length(names_LM))
head_mand <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 1, 1)
head_mand_sens <- c(1, 1, 1, 1, 4, 4, 4, 1, 1, 1,
4, 4, 4, 1, 1, 4, 1, 1, 2, 2,
2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
2, 2, 2, 2, 2, 2, 4, 4)
head_mand_asym <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
2, 2, 2, 3, 3, 3, 2, 3, 2, 2,
2, 2, 3, 3, 3, 3, 1, 1)
head_mand_asym_sens <- c(1, 1, 1, 1, 4, 4, 4, 1, 1, 1,
4, 4, 4, 1, 1, 4, 1, 1, 2, 3,
2, 2, 2, 3, 3, 3, 2, 3, 2, 2,
2, 2, 3, 3, 3, 3, 4, 4)
ventral_dorsal <- c(1, 1, 1, 1, 4, 4, 4, 1, 1, 1,
4, 4, 4, 1, 1, 4, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 4, 4)
half_half <- c(NA, NA, 1, 1, 1, 1, 1, 1, NA, 2,
2, 2, 2, 2, 2, NA, 1, 2, 1, 2,
1, 1, 1, 2, 2, 2, 1, 2, 1, 1,
1, 1, 2, 2, 2, 2, 1, 2)
mandi_only <- c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, 2, 3,
2, 2, 2, 3, 3, 3, 2, 3, 2, 2,
2, 2, 3, 3, 3, 3, NA, NA)
df_modul_models <- data.frame(name = names_LM,
no_modul = no_modularity,
head_mand = head_mand,
head_mand_sens = head_mand_sens,
head_mand_asym = head_mand_asym,
head_mand_asym_sens = head_mand_asym_sens,
ventral_dorsal = ventral_dorsal,
half_half = half_half,
mandi_only = mandi_only)
df_modul_models <- df_modul_models[-c(8:10),]
DF <- df_modul_models
input_folder <- "Figures/"
template <- shapes[,,1]
oculeyeR <- c(6, 7, 34)
oculeyeL <- c(8, 10, 35)
mandiR <- c(16, 18:20, 28, 29, 24, 26, 27)
mandiL <- c(17, 21:23, 32, 33, 25, 31, 30)
pdf(file = paste(input_folder, "LM_config.pdf"),
width = 12,
height = 6)
layout(matrix(c(1:3),
ncol = 3,
byrow = T))
par(mar = c(1, 2, 4, 1))
plot(template[,c(1,2)],
asp = 1,
pch = 21,
cex = 2,
bg = "firebrick",
main = "Dorsal view",
axes = F)
text(template[,c(1,2)],
labels = c(1:35),
pos = c(rep(1,10),
3, 2, 1, 2, 2, 1, 1, 1, 3, 3,
2, 3, 1, 4, 4, 4, 2, 3, 1, 4,
2, 1, 3, 1, 1))
plot(template[,c(2,3)],
asp = 1,
pch = 21,
cex = 2,
bg = "forestgreen",
main = "Anterior view",
axes = F)
text(template[,c(2,3)],
labels = c(1:35),
pos = c(rep(1,18),
4, 3, 1, 2, 2, 4, 2, 3, 1, 4, 1, 1, 3, 4, 1))
plot(template[,c(1,3)],
asp = 1,
pch = 21,
cex = 2,
bg = "navyblue",
main = "Lateral view",
axes = F)
text(template[,c(1,3)],
labels = c(1:35),
pos = c(1,1,1,3,3,3,3,1,1,1,
2,1,1,4,2,3,1,1,1,1,
1,1,1,4,1,3,3,1,1,4,
1,1,1,1,1))
dev.off()
dim(shapes)
A <- av_A #No need for replicates
M <- matrix(NA,
nrow = dim(A)[3],
ncol = dim(A)[2] * dim(A)[1])
for (i in 1:dim(A)[3]) {M[i,] <- c(t(A[,,i]))}
DF_3 <- data.frame(apply(X = DF,
MARGIN = 2,
FUN = rep,
each = 3))
DF_3[, 2:6] <- apply(X = DF_3[, 2:6],
MARGIN = 2,
FUN = as.numeric)
cor_M <- cor(M)
cong_M <- dotcorr(A)
f <- "output_EMMLi_individual_coord.csv"
f2 <- "output_EMMLi_LM_correl.csv"
EMMLi(corr = as.data.frame(cor_M),
N_sample = nrow(M),
mod = DF_3,
abs = T,
saveAs = f)
DF_3
EMMLi(corr = as.data.frame(cor_M),
N_sample = nrow(M),
mod = DF_3[,1:7],
abs = T,
saveAs = f)
str(DF_3)
EMMLi(corr = as.data.frame(cor_M),
N_sample = nrow(M),
mod = DF_3[,1:6],
abs = T,
saveAs = f)
EMMLi(corr = as.data.frame(cong_M),
N_sample = nrow(M),
mod = DF[,1:6],
abs = T,
saveAs = f2)
EMMLi(corr = as.data.frame(cong_M),
N_sample = nrow(M),
mod = DF[,1:6],
abs = T°
EMMLi(corr = as.data.frame(cong_M),
N_sample = nrow(M),
mod = DF[,1:6],
abs = T)
# Head-nmandibles 2 modules partition
modul_test_1 <- modularity.test(A = A,
partition.gp = DF[,3],
iter = 999,
CI = T)
# Ventral head structures, sensory (dorsal) and mandibles partition 3 modules
modul_test_2 <- modularity.test(A = A,
partition.gp = DF[,4],
iter = 999,
CI = T)
# Head as a whole, mandibles separate partition (3 modules)
modul_test_3 <- modularity.test(A = A,
partition.gp = DF[,5],
iter = 999,
CI = T)
# Head ventral, head sensory and mandibles separate (4 modules)
modul_test_4 <- modularity.test(A = A,
partition.gp = DF[,6],
iter = 999,
CI = T)
# Mandibles AND head ventral together, vs head dorsal sensory (2 modules)
modul_test_5 <- modularity.test(A = A,
partition.gp = DF[,7],
iter = 999,
CI = T)
# Left and right sides of the head as 2 modules. Midline LMs removed.
modul_test_6 <- modularity.test(A = A[-which(is.na(DF[,8])),,],
partition.gp = na.omit(DF[,8]),
iter = 999,
CI = T)
# Left and right mandibles only (2 modules) all other LM removed
modul_test_7 <- modularity.test(A = A[-which(is.na(DF[,9])),,],
partition.gp = na.omit(DF[,9]),
iter = 999,
CI = T)
ls_modul <- list(modul_test_1,
modul_test_2,
modul_test_3,
modul_test_4,
modul_test_5)
modul_compar <- compare.CR(modul_test_1,
modul_test_2,
modul_test_3,
modul_test_4,
modul_test_5,
modul_test_6,
modul_test_7,
CR.null = T)
integ_test_1 <- integration.test(A = A,
partition.gp = DF[,3],
iter = 999)
integ_test_2 <- integration.test(A = A,
partition.gp = DF[,4],
iter = 999)
integ_test_3 <- integration.test(A = A,
partition.gp = DF[,5],
iter = 999)
integ_test_4 <- integration.test(A = A,
partition.gp = DF[,6],
iter = 999)
integ_test_5 <- integration.test(A = A,
partition.gp = DF[,7],
iter = 999)
integ_test_6 <- integration.test(A[-which(is.na(DF[,8])),,],
partition.gp = na.omit(DF[,8]),
iter = 999)
integ_test_7 <- integration.test(A[-which(is.na(DF[,9])),,],
partition.gp = na.omit(DF[,9]),
iter = 999)
A1 <- A[which(DF[,5] == 2),,]
A2 <- A[which(DF[,5] == 3),,]
tbpls <- two.b.pls(A1 = A1,
A2 = A2)
integ_compar <- compare.pls(integ_test_1,
integ_test_2,
integ_test_3,
integ_test_4,
integ_test_5,
integ_test_6,
integ_test_7)
modul_compar
modul_compar$sample.z
rbind(modul_compar$sample.z, modul_compar$pairwise.z, modul_compar$pairwise.P)
as.matrix(rbind(modul_compar$sample.z, modul_compar$pairwise.z, modul_compar$pairwise.P))
write.csv(round(as.matrix(rbind(modul_compar$sample.z, modul_compar$pairwise.z, modul_compar$pairwise.P)),2), file = "modul_compar_results.csv", col.names = T, row.names = T)
names(DF)
modul_compar
?compare.CR
