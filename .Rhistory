ls_results$half_half[[2]],
CR.null = T)
intra_gpa_Z <- modul_compar_intra_gpa$sample.z
global_gpa_Z <- modul_compar$sample.z[1:7]
global_gpa_Z
names(intra_gpa_Z) <- names(global_gpa_Z) <- names(DF)[2:7]
matZ <- rbind(intra_gpa_Z,
global_gpa_Z)
# Barplot for comparison
par(mar = c(11,3,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2)
matZ
names(DF)[2:7]
names(intra_gpa_Z) <- names(global_gpa_Z) <- names(DF)[2:8]
matZ <- rbind(intra_gpa_Z,
global_gpa_Z)
# Barplot for comparison
par(mar = c(11,3,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2)
modul_compar_intra_gpa
intra_gpa_Z <- modul_compar_intra_gpa$sample.z
global_gpa_Z <- modul_compar$sample.z[1:7]
names(intra_gpa_Z) <- names(global_gpa_Z) <- names(DF)[2:8]
matZ <- rbind(intra_gpa_Z,
global_gpa_Z)
# Barplot for comparison
par(mar = c(11,3,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2)
layout(1)
par(mar = c(11,3,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2)
?barplot
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2,
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
layout(1)
par(mar = c(13,3,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2,
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
layout(1)
par(mar = c(15,3,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2,
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
input_folder
matZ
pdf(file = paste(input_folder, "Barplot_ZCR.pdf"),
height = 8,
width = 3)
layout(1)
par(mar = c(15,5,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2,
ylab = "Z_CR",
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
dev.off()
pdf(file = paste(input_folder, "Barplot_ZCR.pdf"),
height = 10,
width = 5)
layout(1)
par(mar = c(15,5,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2,
ylab = "Z_CR",
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
dev.off()
pdf(file = paste(input_folder, "Barplot_ZCR.pdf"),
height = 11,
width = 6)
layout(1)
par(mar = c(16,5,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2,
ylab = "Z_CR",
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
dev.off()
pdf(file = paste(input_folder, "Barplot_ZCR.pdf"),
height = 8,
width = 6)
layout(1)
par(mar = c(16,5,2,3))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,2),
las = 2,
ylab = "Z_CR",
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
dev.off()
pdf(file = paste(input_folder, "Barplot_ZCR.pdf"),
height = 8,
width = 6)
layout(1)
par(mar = c(16,5,2,1))
barplot(height = matZ,
beside = T,
col = 1:2,
space = c(0,1),
las = 2,
ylab = "Z_CR",
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
dev.off()
pdf(file = paste(input_folder, "Barplot_ZCR.pdf"),
height = 8,
width = 6)
layout(1)
par(mar = c(16,5,2,1))
barplot(height = matZ,
beside = T,
col = c("black", "gray"),
space = c(0,1),
las = 2,
ylab = "Z_CR",
names.arg = c("No modularity",
"Head-Mandibles",
"Head-Mandibles-Sensory",
"Head-Mandibles asymmetric",
"Head-Mandibles asymmetric-Sensory",
"Ventral-Dorsal",
"Half-Half"))
dev.off()
rPLS1_head_mand <- integ_test_1$r.pls
rPLS2_head_mand_sens <- integ_test_2$r.pls.mat
rPLS3_head_mand_asym <- integ_test_3$r.pls.mat
rPLS4_head_mand_asym_sens <- integ_test_4$r.pls.mat
rPLS5_ventral_dorsal <- integ_test_5$r.pls
rPLS6_half_half <- integ_test_6$r.pls
rPLS7_mandi_only <- integ_test_7$r.pls
rPLS1_head_mand
rPLS_all <- list(rPLS1_head_mand,
rPLS2_head_mand_sens,
rPLS3_head_mand_asym,
rPLS4_head_mand_asym_sens,
rPLS5_ventral_dorsal,
rPLS6_half_half,
rPLS7_mandi_only)
rPLS2_head_mand_sens
integ_test_1
integ_compar
names(DF)
round(rbind(integ_compar$sample.z, integ_compar$pairwise.z, integ_compar$pairwise.P), 5)
write.csv(round(rbind(integ_compar$sample.z, integ_compar$pairwise.z, integ_compar$pairwise.P), 5))
write.csv(file = "integration_compar_results.csv", round(rbind(integ_compar$sample.z, integ_compar$pairwise.z, integ_compar$pairwise.P), 5))
names(DF)
?integration.test
integ_test_1
integ_test_é
integ_test_2
integ_test_3
integ_test_4
integ_test_5
integ_test_6
integ_test_7
pls
integ_test_7
tbpls
palette()
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 1.5,
bg = DF[, i+2],
main = colnames(DF)[i+2],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.5)
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
}
}
# Plot the different models
palette(palette.colors(palette = "Okabe-Ito")[2:7])
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 1.5,
bg = DF[, i+2],
main = colnames(DF)[i+2],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.5)
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
}
}
titles <- c("A. Head-Mandibles",
"B. Head-Mandibles-Sensory",
"C. Head-Mandibles asymmetric",
"D. Head-Mandibles asymmetric-Sensory",
"E. Ventral-Dorsal",
"F. Half-Half")
pdf(file = paste(input_folder,
"pairwise_integration_PLS.pdf",
sep = ""),
height = 12,
width = 5)
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 1.5,
bg = DF[, i+2],
main = titles[i],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.5)
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
}
}
dev.off()
pdf(file = paste(input_folder,
"pairwise_integration_PLS.pdf",
sep = ""),
height = 12,
width = 7)
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 1.5,
bg = DF[, i+2],
main = titles[i],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.5)
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
}
}
dev.off()
pdf(file = paste(input_folder,
"pairwise_integration_PLS.pdf",
sep = ""),
height = 12,
width = 7)
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2.5,
bg = DF[, i+2],
main = titles[i],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.5)
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
}
}
dev.off()
cor.test(bf2, FA)
cor.test(bf2, DA)
cor.test(bf2, FA)
cor.test(bf2, TA)
summary(quadratic_mod)
summary(quadratic_modé)
summary(quadratic_mod2)
summary(quadratic_mod3)
summary(quadratic_mod4)
summary(quadratic_mod5)
summary(quadratic_mod6)
summary(linear_mod)
summary(linear_mod2)
summary(linear_mod"")
summary(linear_mod3)
summary(linear_mod4)
summary(linear_mod5)
CVTA
CVDA
CVFA
CVFA <- sd(FA, na.rm = T)/mean(abs(FA), na.rm = T)
CVBF <- sd(bf, na.rm = T)/mean(bf, na.rm = T)
CVBF2 <- sd(bf2, na.rm = T)/mean(bf2, na.rm = T)
CVHL <- sd(head_l, na.rm = T)/mean(head_l, na.rm = T)
CVsiz <- sd(csiz, na.rm = T)/mean(csiz, na.rm = T)
CVFA
CVBF2
CVHL
CVsiz
modul_test_7
modul_compar
