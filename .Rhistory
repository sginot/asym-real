integ_test_5 <- integration.test(A = A,
partition.gp = newpart,
iter = 999)
A1 <- A[which(DF[,5] == 2),,]
A2 <- A[which(DF[,5] == 3),,]
tbpls <- two.b.pls(A1 = A1,
A2 = A2)
integ_compar <- compare.pls(integ_test_1,
integ_test_2,
integ_test_3,
integ_test_4)
A
dim(DF)
DF <- df_modul_models
DF_3 <- data.frame(apply(X = DF,
MARGIN = 2,
FUN = rep,
each = 3))
DF_3[, 2:6] <- apply(X = DF_3[, 2:6],
MARGIN = 2,
FUN = as.numeric)
modul_test_1 <- modularity.test(A = A,
partition.gp = DF[,3],
iter = 999,
CI = T)
modul_test_2 <- modularity.test(A = A,
partition.gp = DF[,4],
iter = 999,
CI = T)
modul_test_3 <- modularity.test(A = A,
partition.gp = DF[,5],
iter = 999,
CI = T)
modul_test_4 <- modularity.test(A = A,
partition.gp = DF[,6],
iter = 999,
CI = T)
modul_compar <- compare.CR(modul_test_1,
modul_test_2,
modul_test_3,
modul_test_4,
CR.null = T)
integ_test_1 <- integration.test(A = A,
partition.gp = DF[,3],
iter = 999)
integ_test_2 <- integration.test(A = A,
partition.gp = DF[,4],
iter = 999)
integ_test_3 <- integration.test(A = A,
partition.gp = DF[,5],
iter = 999)
integ_test_4 <- integration.test(A = A,
partition.gp = DF[,6],
iter = 999)
newpart <- DF[,5]
newpart[which(newpart == 1)] <- NA
integ_test_5 <- integration.test(A = A,
partition.gp = newpart,
iter = 999)
A1 <- A[which(DF[,5] == 2),,]
A2 <- A[which(DF[,5] == 3),,]
tbpls <- two.b.pls(A1 = A1,
A2 = A2)
integ_compar <- compare.pls(integ_test_1,
integ_test_2,
integ_test_3,
integ_test_4)
tbpls
modul_compar
modul_test_1
palette(c("bisque", "firebrick", "navyblue", "applegreen"))
palette(c("bisque", "firebrick", "navyblue", "darkolivegreen2"))
pdf(file = paste(input_folder, "Module_Models.pdf"),
width = 6,
height = 9)
layout(matrix(c(1:4),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
plot(x = -template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2,
bg = df_modul_models[,3],
main = "Head-Mandibles",
axes = F)
plot(x = -template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2,
bg = df_modul_models[,5],
main = "Head-Mandibles-Asymmetric",
axes = F)
plot(x = -template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2,
bg = df_modul_models[,4],
main = "Head-Mandibles-Sensory",
axes = F)
plot(x = -template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2,
bg = df_modul_models[,6],
main = "Head-Mandibles-Asym-Sensory",
axes = F)
dev.off()
palette(c("bisque", "firebrick", "navyblue", "forestgreen"))
cols <- head_mand[-c(8:10)]
input_folder <- "Figures/"
# FOR DA
pdf(file = paste(input_folder,
"lollipopDA2.pdf",
sep = ""),
width = 10,
height = 6)
par(mar = c(1, 1, 4, 1))
layout(matrix(1:2, ncol = 2))
plot(bilat_sym$DA.component[,2,1],
bilat_sym$DA.component[,1,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 1.5,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$DA.component[i, 2, 1], bilat_sym$DA.component[i, 2, 2]),
y = c(bilat_sym$DA.component[i, 1, 1], bilat_sym$DA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$DA.component[,2,1],
bilat_sym$DA.component[,1,1],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$DA.component[,3,1],
y = bilat_sym$DA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 1.5,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$DA.component[i, 3, 1], bilat_sym$DA.component[i, 3, 2]),
y = c(bilat_sym$DA.component[i, 2, 1], bilat_sym$DA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$DA.component[,3,1],
bilat_sym$DA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
dev.off()
# FOR FA
pdf(file = paste(input_folder,
"lollipopFA2.pdf",
sep = ""),
width = 8,
height = 5)
layout(matrix(1:2, ncol = 2))
par(mar = c(1, 1, 4, 1))
plot(bilat_sym$FA.component[,c(2,1),2],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
y = c(bilat_sym$FA.component[i, 1, 1], bilat_sym$FA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$FA.component[,2,1],
bilat_sym$FA.component[,1,1],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$FA.component[,3,1],
y = bilat_sym$FA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$FA.component[i, 3, 1], bilat_sym$FA.component[i, 3, 2]),
y = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$FA.component[,3,1],
bilat_sym$FA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
dev.off()
#----------------------
pdf(file = paste(input_folder,
"lollipopFA2.pdf",
sep = ""),
width = 8,
height = 5)
layout(matrix(1:2, ncol = 2))
par(mar = c(1, 1, 4, 1))
plot(bilat_sym$FA.component[,c(2,1),2],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 1.5,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
y = c(bilat_sym$FA.component[i, 1, 1], bilat_sym$FA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$FA.component[,2,1],
bilat_sym$FA.component[,1,1],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$FA.component[,3,1],
y = bilat_sym$FA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 1.5,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$FA.component[i, 3, 1], bilat_sym$FA.component[i, 3, 2]),
y = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$FA.component[,3,1],
bilat_sym$FA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
dev.off()
pdf(file = paste(input_folder,
"lollipopFA2.pdf",
sep = ""),
width = 8,
height = 5)
layout(matrix(1:2, ncol = 2))
par(mar = c(1, 1, 4, 1))
plot(bilat_sym$FA.component[,c(2,1),1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 1.5,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
y = c(bilat_sym$FA.component[i, 1, 1], bilat_sym$FA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$FA.component[,2,1],
bilat_sym$FA.component[,1,1],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$FA.component[,3,1],
y = bilat_sym$FA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 1.5,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$FA.component[i, 3, 1], bilat_sym$FA.component[i, 3, 2]),
y = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$FA.component[,3,1],
bilat_sym$FA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
dev.off()
plot(bilat_sym$DA.component[,2,1],
bilat_sym$DA.component[,1,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Right-Left =>")
# Make lollipop plot for FA and DA components
palette(c("bisque", "firebrick", "navyblue", "forestgreen"))
cols <- head_mand[-c(8:10)]
input_folder <- "Figures/"
# FOR DA
pdf(file = paste(input_folder,
"lollipopDA2.pdf",
sep = ""),
width = 10,
height = 6)
par(mar = c(1, 1, 4, 1))
layout(matrix(1:2, ncol = 2))
plot(bilat_sym$DA.component[,2,2],
bilat_sym$DA.component[,1,2],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$DA.component[i, 2, 1], bilat_sym$DA.component[i, 2, 2]),
y = c(bilat_sym$DA.component[i, 1, 1], bilat_sym$DA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$DA.component[,2,2],
bilat_sym$DA.component[,1,2],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$DA.component[,3,1],
y = bilat_sym$DA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$DA.component[i, 3, 1], bilat_sym$DA.component[i, 3, 2]),
y = c(bilat_sym$DA.component[i, 2, 1], bilat_sym$DA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$DA.component[,3,1],
bilat_sym$DA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
dev.off()
# FOR FA
pdf(file = paste(input_folder,
"lollipopFA2.pdf",
sep = ""),
width = 8,
height = 5)
layout(matrix(1:2, ncol = 2))
par(mar = c(1, 1, 4, 1))
plot(bilat_sym$FA.component[,c(2,1),2],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
y = c(bilat_sym$FA.component[i, 1, 1], bilat_sym$FA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$FA.component[,2,2],
bilat_sym$FA.component[,1,2],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$FA.component[,3,1],
y = bilat_sym$FA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$FA.component[i, 3, 1], bilat_sym$FA.component[i, 3, 2]),
y = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$FA.component[,3,1],
bilat_sym$FA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
dev.off()
pdf(file = paste(input_folder,
"lollipopFA2.pdf",
sep = ""),
width = 10,
height = 6)
layout(matrix(1:2, ncol = 2))
par(mar = c(1, 1, 4, 1))
plot(bilat_sym$FA.component[,c(2,1),2],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Right-Left =>")
for (i in 1:dim(mshp)[1]) {
lines(x = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
y = c(bilat_sym$FA.component[i, 1, 1], bilat_sym$FA.component[i, 1, 2]),
col = "black",
lwd = 3)
}
text(bilat_sym$FA.component[,2,2],
bilat_sym$FA.component[,1,2],
labels = 1:35,
pos = 2,
cex = 0.7)
plot(x = -bilat_sym$FA.component[,3,1],
y = bilat_sym$FA.component[,2,1],
asp = 1,
axes = F,
xlab = "",
ylab = "",
pch = 21,
bg = cols,
cex = 2,
main = "<= Post.-Ant. =>")
for (i in 1:dim(mshp)[1]) {
lines(x = -c(bilat_sym$FA.component[i, 3, 1], bilat_sym$FA.component[i, 3, 2]),
y = c(bilat_sym$FA.component[i, 2, 1], bilat_sym$FA.component[i, 2, 2]),
col = "black",
lwd = 3)
}
text(-bilat_sym$FA.component[,3,1],
bilat_sym$FA.component[,2,1],
labels = 1:35,
pos = 2,
cex = 0.7)
dev.off()
#------------
modul_test_1
modul_test_2
names(DF)
modul_test_3
modul_test_4
modul_compar
plot(template[,2:1])
layout(1)
plot(template[,2:1], pch = 21, axes = "n")
plot(template[,c(3,2)], pch = 21, axes = F)
plot(template[,c(3,1)], pch = 21, axes = F)
plot(template[,c(2,1)], pch = 21, axes = F)
plot(template[,c(2,1)], pch = 19, axes = F)
plot(template[,c(1,2)], pch = 19, axes = F)
plot(template[,c(1,2)], pch = 19, axes = F, asp=1)
plot(template[,c(3,2)], pch = 19, axes = F, asp=1)
plot(template[,c(2,3)], pch = 19, axes = F, asp=1)
plot(-template[,2], template[,3] pch = 19, axes = F, asp=1)
plot(-template[,2], template[,3], pch = 19, axes = F, asp=1)
plot(template[,c(2,3)], pch = 19, axes = F, asp=1)
plot(-template[,2], template[,3], pch = 19, axes = F, asp=1)
plot(-template[,2], template[,3], pch = 19, axes = F, asp=1, cex = 3)
plot(-template[,2], template[,3], pch = 19, axes = F, asp=1, cex = 2, bg = "grey")
plot(-template[,2], template[,3], pch = 20, axes = F, asp=1, cex = 2, bg = "grey")
plot(-template[,2], template[,3], pch = 21, axes = F, asp=1, cex = 2, bg = "grey")
CVTA
CVDA
CVBF
CVBF2
CVsiz
CVHL
CVFA
