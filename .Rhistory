col = color,
pch = 15)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = rpls_val,
pos = 3)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = p_val,
pos = 1)
dim(shp_head)
modu
modu_head
LM_paris
LM_pairs
plot(shp_head[which(modu_head == 1),2:3,]
)
plot(shp_head[which(modu_head == 1),2:3,1])
plot(shp_head[which(modu_head == 1),2:3,1], asp =1)
plot(shp_head[which(modu_head == 4),2:3,1], asp =1)
shp_head_sens <- shp_head[which(modu_head == 4),,]
shp_head_sens
text(shp_head_sens[,2:3,1], labels = c(1:9))
text(shp_head_sens[,2:3,1], labels = c(1:9), pos =1)
DF$head_mand_asym_sens
bilatsym_head_sens <- bilat.symmetry(A = shp_head_sens,
ind = ID_head,
replicate = replic_head,
object.sym = T,
land.pairs = matrix(c(1,5, 2,4, 3,6, 8,9),
ncol = 2,
byronw = T))
bilatsym_head_sens <- bilat.symmetry(A = shp_head_sens,
ind = ID_head,
replicate = replic_head,
object.sym = T,
land.pairs = matrix(c(1,5, 2,4, 3,6, 8,9),
ncol = 2,
byrow = T))
bilatsym_head_sens
shp_head_ventral <- shp_head[which(modu_head == 1),,]
plot(shp_head_ventral[,2:3,1], asp = 1)
text(shp_head_ventral[,2:3,1], pos =1)
bilatsym_head_ventral <- bilat.symmetry(A = shp_head_ventral,
ind = ID_head,
replicate = replic_head,
object.sym = T,
land.pairs = matrix(c(3,6, 4,5, 7,8),
ncol = 2,
byrow = T))
bilatsym_head_ventral
bilatsym_head_sens
?bilat.symmetry
bilatsym_head_sens$shape.anova
bilatsym_head_ventral
bilatsym_head_ventral <- bilat.symmetry(A = shp_head_ventral,
ind = ID_head,
replicate = replic_head,
object.sym = T,
land.pairs = matrix(c(3,6, 4,5, 7,8),
ncol = 2,
byrow = T),)
bilatsym_head_ventral <- bilat.symmetry(A = shp_head_ventral,
ind = ID_head,
replicate = replic_head,
object.sym = T,
land.pairs = matrix(c(3,6, 4,5, 7,8),
ncol = 2,
byrow = T), RRPP = F)
bilatsym_head_ventral
shp_head_sens <- shp_head[which(modu_head == 4),,]
bilatsym_head_sens <- bilat.symmetry(A = shp_head_sens,
ind = ID_head,
replicate = replic_head,
object.sym = T,
land.pairs = matrix(c(1,5, 2,4, 3,6, 8,9),
ncol = 2,
byrow = T),
RRPP = F)
shp_head_ventral <- shp_head[which(modu_head == 1),,]
bilatsym_head_ventral <- bilat.symmetry(A = shp_head_ventral,
ind = ID_head,
replicate = replic_head,
object.sym = T,
land.pairs = matrix(c(3,6, 4,5, 7,8),
ncol = 2,
byrow = T),
RRPP = F)
bilatsym_head_ventral
bilatsym_head_sens
data(lizards)
gdf <- geomorph.data.frame(shape = lizards$coords,
ind = lizards$ind,
replicate = lizards$rep)
liz.sym <- bilat.symmetry(A = shape, ind = ind, rep = rep,
object.sym = TRUE,
land.pairs = lizards$lm.pairs, data = gdf, RRPP = TRUE, iter = 149)
summary(liz.sym)
liz.sym
shape
bilat.symmetry(A = shape, ind = ind, rep = rep,
object.sym = F,
land.pairs = lizards$lm.pairs, data = gdf, RRPP = TRUE, iter = 149)
summary(liz.sym)
bilat.symmetry(A = shape, ind = ind, rep = rep,
object.sym = T,
land.pairs = lizards$lm.pairs, data = gdf, RRPP = F, iter = 149)
summary(liz.sym)
?procD.lm
ind
?bilat.symmetry
gdf
citation("geomorph")
library(help = geomorph)
print(library(help = geomorph))
bilatsym_head_ventral
bilatsym_head_sens
liz.sym$symm.shape
bilat.symmetry(A = liz.sym$symm.shape, ind = ind, rep = rep,
object.sym = TRUE,
land.pairs = lizards$lm.pairs, data = gdf, RRPP = TRUE, iter = 149)
bilat.symmetry(A = liz.sym$symm.shape, ind = gdf$ind, rep = gdf$replicate,
object.sym = TRUE,
land.pairs = lizards$lm.pairs, RRPP = TRUE, iter = 149)
dim(liz.sym$symm.shape)
length(gdf$ind)
gdf$ind
bilat.symmetry(A = liz.sym$symm.shape, ind = unique(gdf$ind),
object.sym = TRUE,
land.pairs = lizards$lm.pairs, RRPP = TRUE, iter = 149)
bilat.symmetry(A = liz.sym$symm.shape, ind = unique(gdf$ind),
object.sym = TRUE,
land.pairs = lizards$lm.pairs, RRPP = F, iter = 149)
par(mar = c(4, 8, 6, 4))
image(x = 1:dim(m)[1],
y = 1:dim(m)[1],
z = m,
col = color,
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
title(main = "Landmarks congruence matrix",
line = 5)
abline(v = c(8.5, 17.5, 26.5),
h = c(8.5, 17.5, 26.5),
lwd = 3,
col = "grey")
axis(side = 1,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2,
las = 1)
axis(side = 2,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2, las = 3)
axis(side = 4,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
axis(side = 3,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
legend(x = -4,
y = 35.5,
xpd = T,
legend = round(seq(min(na.omit(c(m))),
max(na.omit(c(m))),
length = length(color)), 2),
col = color,
pch = 15)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = rpls_val,
pos = 3)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = p_val,
pos = 1)
pdf(file = paste(output_folder,
"LM_correlation_module_correl_matrix.pdf",
sep = "/"),
height = 5,
widht = 5)
par(mar = c(4, 8, 6, 4))
image(x = 1:dim(m)[1],
y = 1:dim(m)[1],
z = m,
col = color,
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
title(main = "Landmarks congruence matrix",
line = 5)
abline(v = c(8.5, 17.5, 26.5),
h = c(8.5, 17.5, 26.5),
lwd = 3,
col = "grey")
axis(side = 1,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2,
las = 1)
axis(side = 2,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2, las = 3)
axis(side = 4,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
axis(side = 3,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
legend(x = -4,
y = 35.5,
xpd = T,
legend = round(seq(min(na.omit(c(m))),
max(na.omit(c(m))),
length = length(color)), 2),
col = color,
pch = 15)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = rpls_val,
pos = 3)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = p_val,
pos = 1)
dev.off89
dev.off()
pdf(file = paste(output_folder,
"LM_correlation_module_correl_matrix.pdf",
sep = "/"),
height = 5,
widht = 5)
pdf(file = paste(output_folder,
"LM_correlation_module_correl_matrix.pdf",
sep = "/"),
height = 5,
width = 5)
par(mar = c(4, 8, 6, 4))
image(x = 1:dim(m)[1],
y = 1:dim(m)[1],
z = m,
col = color,
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
title(main = "Landmarks congruence matrix",
line = 5)
abline(v = c(8.5, 17.5, 26.5),
h = c(8.5, 17.5, 26.5),
lwd = 3,
col = "grey")
axis(side = 1,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2,
las = 1)
axis(side = 2,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2, las = 3)
axis(side = 4,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
axis(side = 3,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
legend(x = -4,
y = 35.5,
xpd = T,
legend = round(seq(min(na.omit(c(m))),
max(na.omit(c(m))),
length = length(color)), 2),
col = color,
pch = 15)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = rpls_val,
pos = 3)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = p_val,
pos = 1)
dev.off()
pdf(file = paste(output_folder,
"LM_correlation_module_correl_matrix.pdf",
sep = "/"),
height = 8,
width = 10)
par(mar = c(4, 8, 6, 4))
image(x = 1:dim(m)[1],
y = 1:dim(m)[1],
z = m,
col = color,
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
title(main = "Landmarks congruence matrix",
line = 5)
abline(v = c(8.5, 17.5, 26.5),
h = c(8.5, 17.5, 26.5),
lwd = 3,
col = "grey")
axis(side = 1,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2,
las = 1)
axis(side = 2,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2, las = 3)
axis(side = 4,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
axis(side = 3,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
legend(x = -4,
y = 35.5,
xpd = T,
legend = round(seq(min(na.omit(c(m))),
max(na.omit(c(m))),
length = length(color)), 2),
col = color,
pch = 15)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = rpls_val,
pos = 3)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = p_val,
pos = 1)
dev.off()
# Possible artifact fr
pdf(file = paste(output_folder,
"LM_correlation_module_correl_matrix.pdf",
sep = "/"),
height = 8,
width = 11)
par(mar = c(4, 8, 6, 4))
image(x = 1:dim(m)[1],
y = 1:dim(m)[1],
z = m,
col = color,
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
title(main = "Landmarks congruence matrix",
line = 5)
abline(v = c(8.5, 17.5, 26.5),
h = c(8.5, 17.5, 26.5),
lwd = 3,
col = "grey")
axis(side = 1,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2,
las = 1)
axis(side = 2,
at =  c(4.5, 13, 22, 31),
labels = parts,
font = 2, las = 3)
axis(side = 4,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
axis(side = 3,
at = 1:dim(congro_overall)[2],
labels = lab_congro,
las = 2)
legend(x = -5,
y = 35.5,
xpd = T,
legend = round(seq(min(na.omit(c(m))),
max(na.omit(c(m))),
length = length(color)), 2),
col = color,
pch = 15)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = rpls_val,
pos = 3)
text(x = c(rep(4.5, 3), rep(13, 2), 22),
y = c(13, 22, 31, 22, 31, 31),
labels = p_val,
pos = 1)
dev.off()
# Possible artifact from alignment of left and right mandibles. May artificially
# increase correlation between homologous landmarks
LM_template[-c(8:10), 1] # Shows the list of landmarks, to identify the ones
library(geomorph)
data(lizards)
gdf <- geomorph.data.frame(shape = lizards$coords, ind = lizards$ind, replicate = lizards$rep)
liz.sym <- bilat.symmetry(A = shape, ind = ind, rep = rep, object.sym = TRUE, land.pairs = lizards$lm.pairs, data = gdf, RRPP = TRUE, iter = 149)
liz.sym.noRRPP <- bilat.symmetry(A = shape, ind = ind, rep = rep, object.sym = T, land.pairs = lizards$lm.pairs, data = gdf, RRPP = F, iter = 149)
summary(liz.sym)
summary (liz.sym.noRRPP)
liz.sym.noRRPP$shape.anova$Rsq
sum(liz.sym.noRRPP$shape.anova$Rsq)
sum(liz.sym.noRRPP$shape.anova$Rsq, na.rm=T)
?bilat.symmetry
version(RRPP)
citation(RRPP)
citation("RRPP")
help(RRPP)
plot(liz.sym)
plot(mshape(shp_mand))
points(mshp_mand, pch = 19)
mshape(shp_mand)==mshp_mand
plot(bilatsym_head)
modo_head
part_overall
part_overall2
output_folder <- "./Figures"
plot(A_overall[,2:3,1], asp= 1)
mod_test_head
A_overall
plot(A_overall[,,1]=
plot(A_overall[,,1]=
plot(A_overall[,,1])
plot(A_overall[1:17,,1])
plot(A_overall[1:17,2:3,1])
plot(A_overall[18:26,2:3,1])
image(x = 1:dim(congru_overall)[1],
y = 1:dim(congru_overall)[1],
z = congru_overall,
col = color,
main = "Landmarks congruence matrix",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
abline(v = c(17.5, 26.5),
h = c(17.5, 26.5),
lwd = 3,
col = "grey")
label_head <- DF[-c(LM_LM, LM_RM), 10]
label_LM <- DF[LM_LM, 10]
label_RM <- DF[LM_RM, 10]
lab_congru <- c(label_head, label_LM, label_RM)
axis(side = 1,
at = 1:dim(congru_overall)[2],
labels = lab_congru,
las = 2)
axis(side = 2,
at = 1:dim(congru_overall)[2],
labels = lab_congru,
las = 2)
?two.b.pls
tbpls_asym_head_mand <- two.b.pls(bilatsym_head$asymm.shape,
bilatsym_mand$asymm.shape)
tbpls_asym_head_mand
# Plot resulting heatmap
image(x = 1:dim(congru_asym)[1],
y = 1:dim(congru_asym)[1],
z = congru_asym,
col = color,
main = "Landmarks congruence matrix",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
abline(v = 17.5,
h = 17.5,
lwd = 3,
col = "grey")
tbpls_sym_head_mand <- two.b.pls(bilatsym_head$symm.shape,
bilatsym_mand$symm.shape)
tbpls_sym_head_mand
tbpls_asym_head_mand
image(x = 1:dim(congru_sym)[1],
y = 1:dim(congru_sym)[1],
z = congru_sym,
col = color,
main = "Landmarks congruence matrix",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n")
abline(v = 17.5,
h = 17.5,
lwd = 3,
col = "grey")
# 3D plots to check
plot3d(LM_templ, aspect = T)
# 3D plots to check that deformations are somehow realistic
plot3d(refMesh_RM,
asp = c(1 , 1, 1),
xlim = c(-0.5,0.5),
ylim = c(-0.5,0.5),
zlim = c(-0.5,0.5))
plot(bilatsym_head, mesh = refMesh_head)
mshp_LM
plot(mshp_LM)
plot(mshp_LM[,2:3])
