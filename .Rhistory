& P_values_pairwise_mbm < 0.05)+ 21,
bg = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05) + 1)
clip(x1 = 0,
x2 = 1,
y1 = 0,
y2 = 1)
points(X,
Y,
cex = 2,
pch = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05)+ 21,
bg = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05) + 1)
?legend
legend("topleft",
legend = c("Only significant with global superimposition",
"Significant with both superimposition approaches"),
pch = c(21, 22),
bg = c(1, 2),
bty = "n")
?unclip
clip(x1 = 0,
x2 = 2,
y1 = 0,
y2 = 2)
points(X,
Y,
cex = 2,
pch = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05)+ 21,
bg = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05) + 1)
legend("topleft",
legend = c("Only significant with global superimposition",
"Significant with both superimposition approaches"),
pch = c(21, 22),
bg = c(1, 2),
bty = "n")
?legend
legend("topleft",
legend = c("Only significant with global superimposition",
"Significant with both superimposition approaches"),
pch = c(21, 22),
pt.bg = c(1, 2),
bty = "n",
cex = 2)
X <- unlist(rPLS_all)
Y <- unlist(rPLS_all_mbm)
mod_p_val <- lm(Y ~ X)
newx <- seq(min(X),
max(X),
length.out = 100)
preds <- predict(mod_p_val,
newdata = data.frame(X = newx),
interval = "confidence")
plot(X, Y,  pch = NA,
xlim = c(0.2,1),
ylim = c(0.2,1),
xlab = "Global superimposition pairwise rPLS",
ylab = "Module by moudle superimposition pairwise rPLS",)
abline(0,1,
lty = 2,
lwd = 2,
col = "gray")
clip(x1 = min(X),
x2 = max(X),
y1 = 0,
y2 = 1)
abline(mod_p_val,
lwd = 2)
polygon(x = c(newx, rev(newx)),
y = c(preds[,2], rev(preds[,3])),
border = NA,
col = alpha("black", 0.2))
clip(x1 = 0,
x2 = 2,
y1 = 0,
y2 = 2)
points(X,
Y,
cex = 2,
pch = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05)+ 21,
bg = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05) + 1)
legend("topleft",
legend = c("Only significant with global superimposition",
"Significant with both superimposition approaches"),
pch = c(21, 22),
pt.bg = c(1, 2),
bty = "n",
pt.cex = 2)
pdf(file = paste(input_folder,
"rPLS_superimpositions_correlation",
sep = ""),
height = 5,
width = 5)
plot(X, Y,  pch = NA,
xlim = c(0.2,1),
ylim = c(0.2,1),
xlab = "Global superimposition pairwise rPLS",
ylab = "Module by moudle superimposition pairwise rPLS",)
abline(0,1,
lty = 2,
lwd = 2,
col = "gray")
clip(x1 = min(X),
x2 = max(X),
y1 = 0,
y2 = 1)
abline(mod_p_val,
lwd = 2)
polygon(x = c(newx, rev(newx)),
y = c(preds[,2], rev(preds[,3])),
border = NA,
col = alpha("black", 0.2))
clip(x1 = 0,
x2 = 2,
y1 = 0,
y2 = 2)
points(X,
Y,
cex = 2,
pch = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05)+ 21,
bg = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05) + 1)
legend("topleft",
legend = c("Only significant with global superimposition",
"Significant with both superimposition approaches"),
pch = c(21, 22),
pt.bg = c(1, 2),
bty = "n",
pt.cex = 2)
dev.off()
pdf(file = paste(input_folder,
"rPLS_superimpositions_correlation",
sep = ""),
height = 6,
width = 6)
plot(X, Y,  pch = NA,
xlim = c(0.2,1),
ylim = c(0.2,1),
xlab = "Global superimposition pairwise rPLS",
ylab = "Module by moudle superimposition pairwise rPLS",)
abline(0,1,
lty = 2,
lwd = 2,
col = "gray")
clip(x1 = min(X),
x2 = max(X),
y1 = 0,
y2 = 1)
abline(mod_p_val,
lwd = 2)
polygon(x = c(newx, rev(newx)),
y = c(preds[,2], rev(preds[,3])),
border = NA,
col = alpha("black", 0.2))
clip(x1 = 0,
x2 = 2,
y1 = 0,
y2 = 2)
points(X,
Y,
cex = 2,
pch = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05)+ 21,
bg = as.numeric(P_values_pairwise < 0.05
& P_values_pairwise_mbm < 0.05) + 1)
legend("topleft",
legend = c("Only significant with global superimposition",
"Significant with both superimposition approaches"),
pch = c(21, 22),
pt.bg = c(1, 2),
bty = "n",
pt.cex = 2)
dev.off()
pdf(file = paste(input_folder,
"pairwise_integration_PLS.pdf",
sep = ""),
height = 12,
width = 7)
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2.5,
bg = DF[, i+2],
main = titles[i],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
cor_mat_mbm <- as.matrix(rPLS_all_mbm[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
cor_mat_mbm <- matrix(c(0, cor_mat_mbm, cor_mat_mbm, 0),
ncol = 2, byrow = T)
colnames(cor_mat_mbm) <- colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat_mbm) <- rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
}
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
if (round(cor_mat[j,k], 2) == 0) txt_col <- alpha("white", alpha = 0)
else txt_col <- "black"
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.2,
col = txt_col)
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat_mbm[j,k], 2),
cex = 0.9,
pos = 4,
col = txt_col)
}
}
}
dev.off()
#-------
titles <- c("A. Head-Mandibles",
"B. Head-Mandibles-Sensory",
"C. Head-Mandibles asymmetric",
"D. Head-Mandibles asymmetric-Sensory",
"E. Ventral-Dorsal",
"F. Half-Half")
pdf(file = paste(input_folder,
"pairwise_integration_PLS.pdf",
sep = ""),
height = 12,
width = 7)
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 2, 4, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2.5,
bg = DF[, i+2],
main = titles[i],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
cor_mat_mbm <- as.matrix(rPLS_all_mbm[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
cor_mat_mbm <- matrix(c(0, cor_mat_mbm, cor_mat_mbm, 0),
ncol = 2, byrow = T)
colnames(cor_mat_mbm) <- colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat_mbm) <- rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
}
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
if (round(cor_mat[j,k], 2) == 0) txt_col <- alpha("white", alpha = 0)
else txt_col <- "black"
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.2,
pos = 3,
col = txt_col)
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat_mbm[j,k], 2),
cex = 0.9,
col = txt_col)
}
}
}
dev.off()
#-----------------
palette(palette.colors(palette = "Okabe-Ito")[2:7])
titles <- c("A. Head-Mandibles",
"B. Head-Mandibles-Sensory",
"C. Head-Mandibles asymmetric",
"D. Head-Mandibles asymmetric-Sensory",
"E. Ventral-Dorsal",
"F. Half-Half")
pdf(file = paste(input_folder,
"pairwise_integration_PLS.pdf",
sep = ""),
height = 12,
width = 7)
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 1, 3, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2.5,
bg = DF[, i+2],
main = titles[i],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
cor_mat_mbm <- as.matrix(rPLS_all_mbm[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
cor_mat_mbm <- matrix(c(0, cor_mat_mbm, cor_mat_mbm, 0),
ncol = 2, byrow = T)
colnames(cor_mat_mbm) <- colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat_mbm) <- rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
}
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
if (round(cor_mat[j,k], 2) == 0) txt_col <- alpha("white", alpha = 0)
else txt_col <- "black"
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.2,
pos = 3,
col = txt_col)
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat_mbm[j,k], 2),
cex = 0.9,
col = txt_col)
}
}
}
dev.off()
palette(palette.colors(palette = "Okabe-Ito")[2:7])
titles <- c("A. Head-Mandibles",
"B. Head-Mandibles-Sensory",
"C. Head-Mandibles asymmetric",
"D. Head-Mandibles asymmetric-Sensory",
"E. Ventral-Dorsal",
"F. Half-Half")
pdf(file = paste(input_folder,
"pairwise_integration_PLS.pdf",
sep = ""),
height = 13,
width = 7)
layout(matrix(c(1:6),
ncol = 2,
byrow = T))
par(mar = c(1, 1, 3, 1))
for (i in 1:6) {
plot(x = template[,2],
y = template[,3],
asp = 1,
pch = 21,
cex = 2.5,
bg = DF[, i+2],
main = titles[i],
axes = F)
m_cent <- apply(template,
2,
tapply,
INDEX = as.factor(DF[, i+2]),
mean)[,2:3]
cor_mat <- as.matrix(rPLS_all[[i]])
cor_mat_mbm <- as.matrix(rPLS_all_mbm[[i]])
if (length(cor_mat) == 1) {
cor_mat <- matrix(c(0, cor_mat, cor_mat, 0),
ncol = 2, byrow = T)
cor_mat_mbm <- matrix(c(0, cor_mat_mbm, cor_mat_mbm, 0),
ncol = 2, byrow = T)
colnames(cor_mat_mbm) <- colnames(cor_mat) <- rownames(m_cent)
rownames(cor_mat_mbm) <- rownames(cor_mat) <- rownames(m_cent)
}
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
lines(m_line,
lwd = cor_mat[j,k] * 20,
col = alpha("gray", 0.3))
}
}
points(m_cent,
cex = 4,
pch = 21,
bg = rownames(m_cent))
for (j in rownames(cor_mat)) {
for (k in colnames(cor_mat)) {
m_line <- rbind(m_cent[j,],
m_cent[k,])
if (round(cor_mat[j,k], 2) == 0) txt_col <- alpha("white", alpha = 0)
else txt_col <- "black"
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat[j,k], 2),
cex = 1.2,
pos = 3,
col = txt_col)
text(apply(m_line, 2, mean)[1],
apply(m_line, 2, mean)[2],
labels = round(cor_mat_mbm[j,k], 2),
cex = 0.9,
col = txt_col)
}
}
}
dev.off()
integ_compar
integ_compar_intra_gpa <- compare.pls(ls_results[[1]][[3]],
ls_results[[2]][[3]],
ls_results[[3]][[3]],
ls_results[[4]][[3]],
ls_results[[5]][[3]],
ls_results[[6]][[3]],
ls_results[[7]][[3]])
integ_compar_intra_gpa
summary(mod_p_val)
integ_compar
integ_compar$sample.z
integ_compar_intra_gpa$sample.z
integ_compar_intra_gpa$pairwise.P
ls_results[[1]]
ls_results[[1]][[3]]
ls_results[[2]][[3]]
ls_results[[3]][[3]]
names(ls_results)
ls_results[[3]][[3]]
ls_results[[4]][[3]]
ls_results[[5]][[3]]
ls_results[[6]][[3]]
ls_results[[7]][[3]]
# Required packages:
library(geomorph)
library(EMMLi)
library(abind)
library(scales)
library(paleomorph)
source("../asym_simulation/001_functions.R")
source("../asym_simulation/002_asym_components.R")
source("Rfunctions1.txt")
plot(bilat_sym)
emmli <-EMMLi(corr = as.data.frame(cong_M),
N_sample = nrow(M),
mod = DF[,1:6],
abs = T)
emmli
emmli$results
round(emmli$results, 2)
round_emmli<-round(emmli$results, 2)
write.csv(file = "SuppTable1.csv", x = round_emmli)
